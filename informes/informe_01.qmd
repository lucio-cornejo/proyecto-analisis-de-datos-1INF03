---
title: Informe final
date: 2022-07-02
format: 
  pdf:
    toc: true
    toc-depth: 4
    keep-tex: true
    number-section: true
    highlight-style: dracula
  # html:
  #   toc: true
  #   toc-depth: 4
  #   toc-title: Tabla de contenido
  #   highlight-style: dracula
---

## CARÁTULA

* **Curso:**              Análisis de Datos
* **Profesor:**           Stefany Neciosup
* **Código del curso:**  	1INF03
* **Fecha de Entrega:** 	02/07/2022 

* **Integrantes:**
  + Richle Gianotti, Renzo Ernesto - 20180368
  + Cornejo Ramírez, Lucio Enrique - 20192058
  + Vivas Alejandro, Claudia Mirela - 20141150
  + Mejia Padilla, Andrea Adela - 20180824

## INTRODUCCIÓN

Para entender la dinámica de la industria musical, antes que nada, es necesario saber que no se trata de una sola, sino de varias, diferentes, estrechamente relacionadas entre sí, pero que parten de lógicas y estructuras distintas. La industria musical en su conjunto vive de la creación y la explotación de la propiedad intelectual musical. Compositores y letristas crean canciones, letras y arreglos que se interpretan en directo sobre el escenario, se graban y distribuyen a los consumidores. Esta estructura básica ha dado lugar a tres industrias musicales centrales: la discográfica, centrada en la grabación de música y su distribución a los consumidores; la de las licencias musicales, que sobre todo concede licencias a empresas para la explotación de composiciones y arreglos, y la música en vivo, centrada en producir y promocionar espectáculos en directo, como conciertos, giras, etcétera.

El desarrollo de la Ciencia de Datos esta explotando el uso de los datos para mejorar la toma de decisiones en el sector público y privado. La industria musical no es al excepción, la cual mantiene su interés en generar nuevas canciones populares, para, de esta forma, recuperar los costos de produccion de una canción y maximizar margenes de ganancia. Bajo esta preocupación, se desarrolla el presente trabajo con el objetivo de desarrollar un modelo que logre predecir la propularidad de las canciones futuras, asimismo nos planteamos hacer un análisis de las variables que influyan de manera positiva o negativa en la popularidad de las canciones. De esta forma, el modelo análitico podrá ser utilizado para predecir la popularidad de las canciones futuras, lo cual ayudará a tomar decisiones de manera más efectiva.

Estas son algunas de las interrogantes que se explorarán en este trabajo:

- ¿Qué características en común tienen las canciones más populares de Spotify?
- ¿Existe una correlación entre la popularidad y alguna característica de las canciones?
- ¿Cuánto debe durar un track según los estándares de la actualidad?

### Dataset 

El dataset elegido se obtuvo utilizando el servicio API de Spotify, el cual nos permite obtener
la información de las canciones existentes en tal plataforma. 

El conjunto de datos que estamos empleando consta inicialmente de 20 columnas, las cuales representan variables como el nombre de la canción, su popularidad, duración, el artista, la fecha de lanzamiento, bailabilidad de la canción, su energía, volumen sonoro, etc.

## CAPÍTULO I: COMPRENSIÓN DEL NEGOCIO / ESTUDIO

### Descripción del problema

En la actualidad se sabe qué canciones son las más populares en general observando la cantidad de reproducciones que tienen cada canción, sin embargo la industria de la música es un negocio y como tal una empresa discográfica siempre busca que su canción sea popular para que esta genere ingresos a la empresa. Si pudiéramos saber que características hacen popular a una canción entonces se podrían usar a favor para generar canciones que sean del agrado del público oyente y como consecuencia pueda otorgar un mayor beneficio económico.

### Objetivo del negocio/estudio

Nuestro objetivo principal es el de indagar, descubrir y utilizar las características que definen la popularidad de las canciones presentes en nuestro dataset. 

### Variable objetivo para el negocio

* Las variables que consideramos podrían ser más relevantes para el negocio son: 
  + popularity (Popularidad)
  + duration_ms (La duración del track en milisegundos)
  + danceability (La capacidad de baile del track)

## CAPÍTULO II: FUENTES DE INFORMACIÓN

### Origen de los datos del proyecto

El dataset que empleamos en nuestro trabajo lo descargamos de 
[este](https://www.kaggle.com/datasets/yamaerenay/spotify-dataset-19212020-600k-tracks?resource=download)
sitio web ... precisamente, el archivo **tracks.csv**.

Como se describe en el sitio web del link previo, el dataset **tracks.csv** 
se obtuvo vía el API oficial de **Spotify**. Tal API permite descargar, 
para cualquier canción en Spotify, características sobre aquella canción, 
tales como su duración en milisegundos, volumen, qué tan bailable es, etc.

Así, cada fila en **tracks.csv** representa a una canción diferente en Spotify,
y, las columnas del dataset representan variables asociadas a cada canción.

### Descripción del universo y muestra 

En nuestro caso, el **universo** consistiría el el conjunto de canciones de Spotify
disponibles en el instante de tiempo en que se descargó el dataset, vía
la API oficial de Spotify.

En la [página](https://www.kaggle.com/datasets/yamaerenay/spotify-dataset-19212020-600k-tracks?resource=download) de donde descargamos la data, se menciona que las canciones
extraídas fueron publicadas entre los años 1921 y 2020. 

Sin embargo, tras analizar la data descargada, notamos que hay canciones cuyo año
de lanzamiento figura entre 1900 y 2021. Incluso, una canción del dataset figura
que fue creada en el año 1900, pese a que, tras una búsqueda web, hallamos que la
banda que creó tal canción aún sigue activa.

Por ello, es posible que, eventualmente, se requiera que nosotros mismos empleemos
el API oficial de Spotify para obtener la data de las canciones cuyo identificador
ya poseemos, gracias al dataset descargado.
Esto último con el fin de crear un nuevo dataset, ahora sin errores, con el cual 
trabajaríamos como base datos de este proyecto.

También podríamos descartar a las filas donde encontremos errores como el mencionado
previamente respecto a la fecha de publicación de la canción. 
Sin embargo, por ahora, seguiremos usando el dataset descargado.

Entonces, el **universo** lo consideramos como el conjunto de canciones disponibles
en Spotify, **actualmente**.

En ese sentido, la **muestra** consiste del conjunto de canciones de Spotify 
de las cuales tenemos información en las filas del dataset descargado.
Por ahora, es una muestra arbitraria (no se sabe como se realizó el muestreo),
pero, más adelante, nosotros mismos realizaremos el muestreo, vía el API oficial de Spotify.

La muestra consiste de las siguientes columnas: 

#### Loudness

Describe la sonoridad general de una pista en decibeles. Los valores de sonoridad se promedian en toda la pista y son útiles para comparar la sonoridad relativa de las pistas. La sonoridad es la cualidad de un sonido que es el principal correlato psicológico de la fuerza física (amplitud). Los valores suelen oscilar entre -60 y 0 db.
Se observa que la distribución de la variable se sesga hacia el lado derecho, en este caso usamos a 1.7 como coeficiente. El porcentaje de valores atípicos es 9% del total de los datos de esta columna. Por lo que es posible generar imputaciones. 

#### Instrumentalness

Predice si una pista no contiene voces. Los sonidos "Ooh" y "aah" se consideran instrumentales en este contexto. Las pistas de rap o de palabras habladas son claramente "vocales". Cuanto más se acerque el valor de instrumentalización a 1,0, mayor será la probabilidad de que la pista no tenga contenido vocal. Los valores superiores a 0,5 representan pistas instrumentales, pero la confianza es mayor a medida que el valor se acerca a 1,0.
Se observa que la mayoría de los datos están concentrado alrededor de cero, es decir la distribución esta sesgada a la izquierda, en este caso usamos a 3 como coeficiente. El porcentaje de valores atípicos es mayor a 20% del total de los datos de esta columna. Por lo que es no posible generar imputaciones.

#### Liveness

Detecta la presencia de una audiencia en la grabación. Valores más altos de liveness representan una probabilidad incrementada de que la pista haya sido realizada en vivo. Un valor de 0.8 provee una probabilidad fuerte de que la pista sea en vivo.
Se observa que los datos están concentrados alrededor de 0.1 aproximadamente; no obstante tales datos muestran un fuerte sesgo hacia la derecha, e incluso presentan un ligerada bimodalidad. Usamos un coeficiente de 1.3 para determinar a los valores outliers. El porcentaje de valores atípicos es de 9.51%. 

#### Valence

Es medida desde 0.0 hasta 1.0 que describe la positividad musical expresada por la pista. Las pistas con un sonido de alta valence suenan más positivos (e.g., felices, alegres, eufóricos), mientras que las pistas con una baja valence suenan más negativas (e.g., tristes, deprimentes, enojadas). Se observa que al distribución se asemeja a uns distribución unirfore , donde parace que cada valor tomado por esta variable se acerca a un mismo nivel de densidad. Usamos un coeficiente de 1.4 para determinar a los valores outliers y el porcentaje de valores atípicos es de 9%.

#### Tempo

Es el tempo general estimado de una pista en beats por minutos (BPM, por sus siglas en inglés). En terminología musical, el tempo es la velocidad o ritmo de una pieza dada y se deriva directamente de una duración promedio de beat. 
Se observa que los datos presentan múltiples modas, aproximadamente alrededor de los valores 75, 100, 140, 175. Estos datos presentan un ligero sesgo hacia la derecha. El porcentaje de valores atípicos para esta variable es 8.90%.

#### Duration_ms

Es la duración de una pieza en milisegundos. Respecto a la distribución de esta variable, se observa que la distribución de los datos es en principio aparentemente degenerada (los datos están virtual o totalmente reunidos en un punto). No obstante, tal aparente degeneración se explica por el hecho de que existe una serie de piezas cuya duración puede ser extremadamente larga. En este caso, si bien los valores atípicos representan solo el 8.99% del total de la muestra de valores para esta variable, tal cantidad de valores atípicos, dados sus valores extremadamente altos, tienen un efecto visual altamente significativo sobre la interpretabilidad de la distribución de los datos.

#### Danceability

La danceability describe qué tan adecuada es una pista para bailar, basada en una combinación de elementos musicales incluyendo el tempo, la estabilidad rítmica (rhythm stability), la fuerza del beat (beat strength), y una regularidad general. Un valor de 0.0 es menos danceable 1.0 es máximamente danceable.
Se observa que los datos se concentran alrededor de 0.65, y presentan un ligero sesgo hacia la izquierda. Los valores atípicos representan 8.216% de la muestra,para calcularlos se usó el coeficiente 1.6 que acompaña al rango intercuartil. 

#### Energy

La energía es una medida desde 0.0 a 1.0 y representa una medida perceptiva de intensidad y actividad. Típicamente, las pistas energéticas se sienten rápidas, de volumen alto (loud), y ruidosas. Por ejemplo, el death metal tiene una alta energía, mientras que el preludio de Bach da un puntaje bajo en la escala. Características perceptivas contribuyen a este atributo incluyen rango dinámico, el volumen percibió, el timbre, el onset rate, y la entropía general.
Se observa que los datos son ligeramente multimodales. con los datos ligeramente más concentrados alrededor de 0.35, 0.55, 7.00 y 0.85. Los valores atípicos para esta variable representan 9.32% de la muestar y para calcularlos se usó el coeficiente 1.4 que acompaña al rango intercuartil. 

#### Speechiness

Esta variableetecta la presencia de palabras habladas en una pieza. Mientras más contenido hablado presenta una grabación (e.g., talk show, audio book, poesía), más cercano a 1.0 será el valor del atributo. Los valores superiores a 0.66 describen piezas que probablemente estén hechas enteramente de palabras habladas. Valores entre 0.33 y 0.66 describen piezas que podrías contener tanto música como una parte oral, ya sea en secciones o en capas, incluyendo casos como el rap. Valores menores a 0.33 con mayor probabilidad representan múscia y otras piezas non-speech-like.
De manera similar al caso de la variable Duration_ms, aunque en medida mucho menor, esta variable, Speechiness, presenta en principio una aparente distribución degenerada, concentrada alrededor 0. No obstante, tal aparente naturaleza se debe al 10.39% de valores atípicos que presenta la muestra de datos para esta variable, cuyos niveles están concentrados alrededor de 1. En otra palabras, aproximadamente el 88% de los datos se concentra alrededor de 0.0, mientras que el 10.39% lo hace alrededor de 1.0. 

#### Acousticness

Una medida de confianza desde 0.0 hasta 1.0 sobre si la pieza es acústica. 1.0 representa alta confianza en que la pieza es acústica (>=0 | <= 1).
Se observa que los datos se concentran en su mayoría alrededor de ambos valores extremos. La distribución de los valores para esta variable es en tal sentido bimodal. Los valores atípicos representan un 8.76% del total de valores de la muestra para esta variable.

### Descripción y entendimiento de variables 

Esta sección del capítulo dos la hemos desarrollado en el **Jupyter notebook** 
presentado para este informe, así que no incluiremos aquella descripción en este archivo.

La exploraricón de las variables ha sido realizada mediante
[esta](https://lucio-cornejo.shinyapps.io/chapter-II-dashboard-INF03/)
aplicación web. Así, encontramos los siguientes patrones en la data:

- A partir de 1950, para décadas cada vez más recientes, existe una mayor proporción de canciones
que presentan valores cada vez más grandes de popularidad. 
- Para décadas más recientes, las canciones más populares tienden a ser aquellas cuya longitud
del nombre está entre 3 y 10 caracteres.

## CAPÍTULO III: PREPROCESAMIENTO DE DATOS

En ese capitulo se detalla el proceso de preprocesamiento de los datos. Por otro lado, la variable popularity es la variable dependiente del estudio por lo cual esta variable no debe pasar por ningún tratamiento de outliers y/o vacíos.

### Selección de registros y atributos

Excluimos la variables “artist”, pues esta no aporta información para la predicción de popularidad de canciones.  

### Transformación previa a la imputación

Las variables **duration_ms**, **speechiness** e **instrumentalness** requirieron ser transformadas vía la función
logaritmo, tras haber aumentado los valores en tales variables
en 0.001, para evitar valores 0, lo cual nos permite aplicar logaritmo. Ese aumento de 0.001 se realizó porque aquellas tres 
variables poseen valores entre 0 y 100.

### Tratamiento de datos atípicos

Se realizaron **Q-Q plots** para las variables numéricas, y
se observó que ninguna de aquellas variables seguía una distribución
gaussiana. Por ello, en vez considerar los whiskers superior e inferior usuales, creamos una aplicación web con el fin de definir,
de manera interactiva, tales whiskers superior e inferior, bajo la condición que los datos atípicos que producirían tales nuevos whiskers representen menos del 10% de la variable; así hicimos, variable por variable (numérica).

### Tratamiento de datos vacíos

Solamente en la variable **names** existen valores vacíos, 71, en particular. Sin embargo, como se comentó previamente, tal columna
se descartará del dataset, pues existe otra columna que produce
la misma información que la columna **names** y que no presenta vacíos.

### Creación y transformación de variables

Inicialmente la base de datos con la que contábamos tenía una reducida cantidad de columnas, de las cuales algunas no aportaban con información relevante para el objetivo del negocio. En ese sentido, transformamos las variables name, time_signature y realice_data. De las cuales obtenemos información que podrán servir para la predicción. 

#### Name

Contiene el nombre de la canción, a partir de esta se generan dos variables: 

- Name_lenght : contabiliza al cantidad de caracteres string del nombre de la canción omitiendo los espacios vacíos entre palabra y palabra. 
- Words_name: contabiliza la cantidad de palabras que están presentes en el nombre de una canción. 

Es importante recordar, que luego de generar ambas variables, se tiene que eliminar la variable "name" para no caer en el problema de multicolinealidad. 

#### Realease date

Indica la fecha del lanzamiento de la canción incluyendo el año, mes y día. Apartir de esat variable se crearon cuatro variables: 

- Release_year: año en el que se publicó la canción 
- Release_month: mes en el que se publicó la canción
- Release_days: día en el que se publicó la canción
- Release_trim: trimestre en el que se publicó la canción

Posteriormente, eliminamos la variable realise date. 

#### time_signature

Esta variable **ordinal** contiene la cantidad de pulsos en un compás, para cada canción. Esta variable toma valores de 3 a 7, así que la discretizamos para que tome el valor de 0 si los valores son mayores iguales a 0 y menores que 4; y tome el valor de 1 si los valores toman valores mayores iguales a 4. 

Esta recategorización se basa en el hecho que casi todas las canciones que existen actualmente en el mundo poseen un valor
de 4 en **time_signature**.

#### popularity

Para clasificar a las canciones en las categorías **popular** 
y **no popular**, se escogió el valor 40 como punto de corte.

Es decir, canciones con un valor de popularidad menor a 40 se asignaron a 0 
(no populares); caso contrario, tales canciones se asignan a 1
(populares).

### Descripción de variables listas para el modelamiento

## CAPÍTULO IV: DESARROLLO DEL MODELO 

### Análisis de correlación entre variables

Se observa que los colores que adoptan las casillas de la matriz de correlación son rosados, lo cual indica que las variables tienen un coeficiente de correlación que se encuentra entre 0.2 y 0.4, es decir el nivel de correlación entre variables numéricas predictoras no es muy alta.

### Partición en datos de train-test (o train-test-val) 

Nuestro dataset, que cuenta con 586672 registros, será dividido en grupos aleatorios más pequeños para que estos puedan ser utilizados posteriormente por los conjuntos de entrenamiento(train), testeo(test) y validación(val). 
Para esta partición de datos utilizamos el algoritmo de train_test_split e indicamos que la partición se haga por la cuarta parte de la cantidad de registros original. 

### Balanceo de datos (en caso aplique)

Para el balanceo de datos, decidimos utilizar el agoritmo SMOTE el cual en este caso es un algoritmo para oversampling que busca puntos vecinos cercanos y agrega puntos “en linea recta” entre ellos. 
Al hacer un conteo de las canciones que eran consideradas populares(1) y la que no eran consideras "populares(0)", obtuvimos que el 73% de las canciones en los registros eran "no populares" lo cual podría influenciar en los resultados que muestren nuestros modelos analíticos.
Antes de realizar el balanceo verificamos también si los registros contaban con vacíos, al no ser el caso se procedió a crear dos nuevos conjuntos de datos "x_train_smote" y "y_train_smote" que serían utilizados posteriormente para probar modelos con estos conjuntos que tienen los datos balanceados.

### Selección de parámetros (en caso aplique) 

### Selección del mejor modelo (Evaluación de modelos en diferentes escenarios, comparación de las métricas de ajuste de los modelos al realizar predicciones con datos del test y/o validación) 

### Descripción de la estructura del modelo seleccionado (tipo de modelo y parámetros elegidos) 

## CAPÍTULO V: CONCLUSIONES 

## CAPÍTULO VI: RECOMENDACIONES 

- El dataset con el que trabajamos, que fue descargado de Kaggle, presentaba diversos problemas:
    - Esta consistía principalmente de canciones no populares, así que los modelos trabajados predecían **no popularidad**, en vez de popularidad. 
    - Esta contiene una fila con data errónea, pues a una banda chilena se le asignan valores incorrectos respecto a la fecha
    de publicación de las canciones.
Por ello, recomendamos que se utilice el identificador Spotify de las
canciones del dataset, para scrapear la información actualizada de tales canciones. Además, añadir canciones populares al dataset, para que los modelos a emplearse puedan predecir **popularidad**, a partir
de una data mejor balanceada respecto a canciones populares y no populares.
