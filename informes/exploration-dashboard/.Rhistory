n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(111)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(1111)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(11111)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(111111)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(111111)
n <- 6
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(111111)
n <- 7
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(12)
n <- 7
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(12)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(13)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(14)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(15)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(16)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(17)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(18)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(19)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(20)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(21)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(22)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(23)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(24)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(25)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(26)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(27)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(28)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(29)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(30)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(31)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(32)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(33)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(34)
set.seed(34)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(35)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(36)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(37)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(38)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(39)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(40)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(41)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(42)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(44)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
set.seed(45)
n <- 5
paleta <- randomcoloR::distinctColorPalette(20)[sample(1:20, n, replace = FALSE)]
pie(1:n, type = 'h', col = paleta)
reticulate::repl_python()
import pandas as pd
x = pd.DataFrame({1:[1,2]})
import pandas as pd
x = pd.DataFrame({1:[1,2]})
print(x.head())
quit
y <- 1:10
---
title: "Untitled"
format:
html:
theme: default
jupyter: python3
---
```{python}
import pandas as pd
x = pd.DataFrame({1:[1,2]})
print(x.head())
```
```{r}
y <- (py$x)
print(y)
```
---
title: "Untitled"
format:
html:
theme: default
jupyter: python3
---
```{python}
import pandas as pd
x = pd.DataFrame({1:[1,2]})
print(x.head())
```
```{r}
y <- py$x
print(y)
```
acquisition_bd <- readRDS("G:/.shortcut-targets-by-id/1dYzvu2oqhuQSUvdZHj0WWRDCLtie1R1P/VD/_ResultsByPatient/acquisition_bd.RDS")
acquisition_bd
View(acquisition_bd)
install.packages('rsconnect')
rsconnect::setAccountInfo(name='vd-results', token='090DC0E9D5533541E478287539D2BB47', secret='jxyKx0C7ryyP20UxcJj0JafW/0gFkIpM+EYwXXVk')
"G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/shiny-dashboard-info-pacientes.Rmd"
ruta <- "G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/shiny-dashboard-info-pacientes.Rmd"
library(rsconnect)
rsconnect::deployApp(ruta)
?deployApp
library(rsconnect)
rsconnect::deployApp(ruta, account = "VD")
library(rsconnect)
rsconnect::deployApp(ruta, account = "vd-results")
install.packages("shinyRGL")
library(rsconnect)
rsconnect::deployApp(ruta, account = "vd-results")
rsconnect::setAccountInfo(name='vd-results', token='090DC0E9D5533541E478287539D2BB47', secret='jxyKx0C7ryyP20UxcJj0JafW/0gFkIpM+EYwXXVk')
install.packages('openssl')
install.packages("openssl")
library(rsconnect)
options(rsconnect.http.trace = TRUE, rsconnect.error.trace = TRUE, rsconnect.http.verbose = TRUE)
rsconnect::setAccountInfo(name='vd-results', token='090DC0E9D5533541E478287539D2BB47', secret='jxyKx0C7ryyP20UxcJj0JafW/0gFkIpM+EYwXXVk')
rsconnect::setAccountInfo(name='vd-results', token='8F714E086DD87854BE0235D2465C6856', secret='ntJKjeW6G0y+V0x3+DPooPmWXiTC2X+jDvRNM34g')
ruta <- "G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/"
rsconnect::setAccountInfo(name='vd-results', token='8F714E086DD87854BE0235D2465C6856', secret='ntJKjeW6G0y+V0x3+DPooPmWXiTC2X+jDvRNM34g')
ruta <- "G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/shiny-app-dashboard"
ruta <- "G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/shiny-dashboard-app"
rsconnect::deployApp(ruta, account = "vd-results")
library(reticulate)
use_python("C:\\Python39\\python.exe")
x <- 1:10
reticulate::repl_python()
p <- r.x + 10
print(p)
quit
print(py$p)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
mainDB
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
mainDB
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
wound_reduction_DB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_reduction_DB.RDS")
view(wound_reduction_DB)
View(wound_reduction_DB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
hist(mainDB$numImgIR)
hist(mainDB$numImgRGB)
summary(mainDB$numImgIR)
summary(mainDB$numImgRGB)
sum(mainDB$numImgIR > 100)
sum(mainDB$numImgIR > 100, na.rm = T)
nrow(mainDB)
sum(mainDB$numImgIR > 100, na.rm = T)
source("~/.active-rstudio-document", echo=TRUE)
sum(mainDB$numImgIR > 100, na.rm = T)
sum(mainDB$numRGB > 100, na.rm = T)
nrow(mainDB)
sum(mainDB$numIMGRGB > 100, na.rm = T)
sum(mainDB$numImgRGB > 100, na.rm = T)
sum(mainDB$numImgIR > 100, na.rm = T)
sum(mainDB$numImgRGB > 100, na.rm = T)
nrow(mainDB)
sum(mainDB$numImgIR > 100, na.rm = T)
sum(mainDB$numImgRGB > 100, na.rm = T)
nrow(mainDB)
depth
summary(wound_reduction_DB$reduction_w_15d)
table(is.na(wound_reduction_DB))
table(is.na(wound_reduction_DB$reduction_w_15d))
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
wound_reduction_DB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_reduction_DB.RDS")
View(wound_reduction_DB)
blogdown:::preview_site()
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
wound_metrics_evolution_DB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_metrics_evolution_DB.RDS")
View(wound_metrics_evolution_DB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
wound_metrics_evolution_DB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_metrics_evolution_DB.RDS")
View(mainDB)
View(wound_metrics_evolution_DB)
c("public_pass", "earliest_date_with_metrics", geom_metrics, "wound_median_temperature", extracted_metrics)
wound_metrics_evolutionDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_metrics_evolutionDB.RDS")
View(wound_metrics_evolutionDB)
wound_metrics_evolutionDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_metrics_evolutionDB.RDS")
View(wound_metrics_evolutionDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
View(mainDB)
mainDB %>%
select(ends_with("_read"))
mainDB |>
select(ends_with("_read"))
library(dplyr)
mainDB %>%
select(ends_with("_read"))
library(dplyr)
mainDB %>%
select(matches('_WB$|_read$'))
mainDB %>%
select(matches('_WB$|_read$'))
mainDB %>%
mutate(public_pass = factor(public_pass)) %>%
select(
"public_pass", "earliest_date_with_metrics",
"wound_median_temperature", # Basic thermal metric
matches('_WB$|_read$')
# ends_with("_WB"), # Geometrical metrics
# ends_with("_read") # Other metrics extracted reading files
) %>%
View()
mainDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/mainDB.RDS")
View(mainDB)
wound_metrics_evolutionDB <- readRDS("G:/.shortcut-targets-by-id/181SM-cCGqPBWeaJQnjtXb5Sfvvy0jOck/ResultadosVD/dashboard-info-pacientes/databases/wound_metrics_evolutionDB.RDS")
View(wound_metrics_evolutionDB)
hist(mainDB$area_PW)
hist(mainDB$area_WB)
boxplot(mainDB$area_WB)
setwd("D:/proyecto-analisis-de-datos-1INF03/informes/exploration-dashboard")
library(tidyverse)
library(shiny)
library(plotly)
library(flexdashboard)
knitr::opts_chunk$set(echo = FALSE)
# Fix DT bug
options(DT.options = list(scrollY = "100vh"))
#| cache: true
#| cache.lazy: false
# Cargar data como está justo antes de ser imputada
# dfnum <- read.csv("../../datos/dfnum.csv", sep = ",")
# dfcat <- read.csv("../../datos/dfcat.csv", sep = ",")
# En caso no tenga el archivo df.csv:
# df <- data.frame(dfnum, dfcat)
# Sino, cargar la combinación de ambos data frame previos,
# donde se añade la columna asociada a la década de lanzamiento
df <- read.csv("df.csv", sep = ",")
dfnum_pre_imput <- as.data.frame(select(df, popularity:tempo))
dfnum_post_imput <- read.csv("dfnum_imputada.csv", sep = ",")
# Añadir indicador sobre imputación para mezclar data
dfnum_mezcla <- rbind(
dfnum_pre_imput %>%
mutate(etapa_imputacion = "pre") %>%
as.data.frame(),
dfnum_post_imput %>%
mutate(etapa_imputacion = "post") %>%
as.data.frame()
)
# Convertimos la categoría creada en factor,
# para que funcione apropiadamente al agrupar
dfnum_mezcla[, "etapa_imputacion"] <-
factor(dfnum_mezcla[, "etapa_imputacion"])
ggplot(
dfnum_mezcla,
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
ggplot(
head(dfnum_mezcla, 1000),
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
ggplot(
head(dfnum_mezcla, 10000),
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
ggplot(
head(dfnum_mezcla, 100),
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
ggplotly(
ggplot(
head(dfnum_mezcla, 100),
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2),
tooltip = "text"
)
dfnum_mezcla[1,]
dfnum_mezcla[c(50000),]
dim(dfnum_mezcla)
1173344 /2
dfnum_mezcla[c(1:10000,590000:591000),]
ggplot(
dfnum_mezcla[c(1:10000,590000:591000),],
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2),
dfnum_mezcla[c(1:10000,590000:591000),]
ggplot(
dfnum_mezcla[c(1:10000,590000:591000),],
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
fill = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
ggplot(
dfnum_mezcla[c(1:10000,590000:591000),],
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
group = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
ggplot(
dfnum_mezcla[c(1:10000,590000:591000),],
aes(
# x = dfnum_mezcla[, input$numeric_variable],
x = popularity,
color = etapa_imputacion,
text = paste(
# input$numeric_variable,
"Popularidad:", popularity,
"<br>Etapa de imputación:",
etapa_imputacion
)
)
) + geom_density(alpha = 0.2)
